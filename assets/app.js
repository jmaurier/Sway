angular.module("app",["ngRoute"]),angular.module("app",["ngRoute","toastr"]).controller("ApplicationCtrl",["$scope","$location","$window","UserSvc","toastr",function(e,t,n,o,r){if(e.$on("login",function(n,o){e.currentUser=o,t.path("/")}),e.logout=function(){delete e.currentUser,t.path("/"),window.sessionStorage.removeItem("token")},o.isLoggedIn()){o.getUser().then(function(t){e.currentUser=t})}}]),angular.module("app").controller("DashboardCtrl",["$scope","$location","toastr",function(e,t,n){}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","toastr",function(e,t,n){e.login=function(n,o){e.errorMsg="",t.login(n,o).then(function(t){e.$emit("login",t)},function(t){e.errorMsg="Incorrect username/password."})}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(e,t){e.register=function(n,o){t.register(n,o).then(function(t){e.$emit("login",t)})}}]),angular.module("app").config(["$routeProvider",function(e){e.when("/",{controller:"DashboardCtrl",templateUrl:"/templates/dashboard.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"/templates/register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"/templates/login.html"})}]),angular.module("app").service("UserSvc",["$http",function(e){var t=this;t.getUser=function(){return e.get("/api/users").then(function(e){return e.data})},t.login=function(n,o){return e.post("/api/sessions",{username:n,password:o}).then(function(n){return window.sessionStorage.token=n.data,e.defaults.headers.common["x-auth"]=n.data,t.getUser()})},t.register=function(n,o){return e.post("/api/users",{username:n,password:o}).then(function(){return t.login(n,o)})},t.isLoggedIn=function(){var t=!1;return window.sessionStorage.token&&(e.defaults.headers.common["x-auth"]=window.sessionStorage.token,t=!0),t}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJkYXNoYm9hcmQuY3RybC5qcyIsImxvZ2luLmN0cmwuanMiLCJyZWdpc3Rlci5jdHJsLmpzIiwicm91dGVzLmpzIiwidXNlci5zdmMuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCIkbG9jYXRpb24iLCIkd2luZG93IiwiVXNlclN2YyIsInRvYXN0ciIsIiRvbiIsIl8iLCJ1c2VyIiwiY3VycmVudFVzZXIiLCJwYXRoIiwibG9nb3V0Iiwid2luZG93Iiwic2Vzc2lvblN0b3JhZ2UiLCJyZW1vdmVJdGVtIiwiaXNMb2dnZWRJbiIsImdldFVzZXIiLCJ0aGVuIiwicmVzcG9uc2UiLCJsb2dpbiIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJlcnJvck1zZyIsIiRlbWl0IiwiZXJyb3IiLCJyZWdpc3RlciIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwic2VydmljZSIsIiRodHRwIiwic3ZjIiwidGhpcyIsImdldCIsImRhdGEiLCJwb3N0IiwidG9rZW4iLCJkZWZhdWx0cyIsImhlYWRlcnMiLCJjb21tb24iLCJyZXN1bHQiXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFBQyxPQUFBLE9BQ0UsWUNERkQsUUFBQUMsT0FBQSxPQUFBLFVBQUEsV0FDQUMsV0FBQSxtQkFBK0IsU0FBQSxZQUFBLFVBQUEsVUFBQSxTQUFBLFNBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEdBWTdCLEdBWEFKLEVBQUFLLElBQUEsUUFBQSxTQUFBQyxFQUFBQyxHQUNFUCxFQUFBUSxZQUFBRCxFQUNBTixFQUFBUSxLQUFBLE9BR0ZULEVBQUFVLE9BQUEsaUJBQ0NWLEdBQUEsWUFDQ0MsRUFBQVEsS0FBQSxLQUNBRSxPQUFBQyxlQUFBQyxXQUFBLFVBR0ZWLEVBQUFXLGFBQ0UsQ0FBQVgsRUFBQVksVUFBQUMsS0FBQSxTQUFBQyxHQUNFakIsRUFBQVEsWUFBQVMsUUNmTnBCLFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxpQkFBNkIsU0FBQSxZQUFBLFNBQUEsU0FBQUMsRUFBQUMsRUFBQUcsT0NEN0JQLFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxhQUF5QixTQUFBLFVBQUEsU0FBQSxTQUFBQyxFQUFBRyxFQUFBQyxHQUN2QkosRUFBQWtCLE1BQUEsU0FBQUMsRUFBQUMsR0FDQ3BCLEVBQUFxQixTQUFBLEdBQ0NsQixFQUFBZSxNQUFBQyxFQUFBQyxHQUNBSixLQUFBLFNBQUFULEdBQ0VQLEVBQUFzQixNQUFBLFFBQUFmLElBQ0YsU0FBQWdCLEdBQ0N2QixFQUFBcUIsU0FBQSxxQ0NSTHhCLFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxnQkFBNEIsU0FBQSxVQUFBLFNBQUFDLEVBQUFHLEdBQzFCSCxFQUFBd0IsU0FBQSxTQUFBTCxFQUFBQyxHQUNFakIsRUFBQXFCLFNBQUFMLEVBQUFDLEdBQ0FKLEtBQUEsU0FBQVQsR0FDRVAsRUFBQXNCLE1BQUEsUUFBQWYsU0NMTlYsUUFBQUMsT0FBQSxPQUNBMkIsUUFBUSxpQkFBQSxTQUFBQyxHQUNQQSxFQUNBQyxLQUFBLEtBQUE1QixXQUFBLGdCQUErQzZCLFlBQUEsOEJBQy9DRCxLQUFBLGFBQUE1QixXQUFBLGVBQThDNkIsWUFBQSw2QkFDOUNELEtBQUEsVUFBQTVCLFdBQUEsWUFBMkM2QixZQUFBLDZCQ0w1Qy9CLFFBQUFDLE9BQUEsT0FDQStCLFFBQUEsV0FBb0IsUUFBQSxTQUFBQyxHQUNsQixHQUFBQyxHQUFBQyxJQUNBRCxHQUFBaEIsUUFBQSxXQUNFLE1BQUFlLEdBQUFHLElBQUEsY0FDQWpCLEtBQUEsU0FBQUMsR0FDRSxNQUFBQSxHQUFBaUIsUUFHSkgsRUFBQWIsTUFBQSxTQUFBQyxFQUFBQyxHQUNFLE1BQUFVLEdBQUFLLEtBQUEsaUJBQ0VoQixTQUFBQSxFQUFBQyxTQUFBQSxJQUNGSixLQUFBLFNBQUFDLEdBR0UsTUFGQU4sUUFBQUMsZUFBQXdCLE1BQUFuQixFQUFBaUIsS0FDQUosRUFBQU8sU0FBQUMsUUFBQUMsT0FBQSxVQUFBdEIsRUFBQWlCLEtBQ0FILEVBQUFoQixhQUdKZ0IsRUFBQVAsU0FBQSxTQUFBTCxFQUFBQyxHQUNFLE1BQUFVLEdBQUFLLEtBQUEsY0FDRWhCLFNBQUFBLEVBQUFDLFNBQUFBLElBQ0ZKLEtBQUEsV0FDRSxNQUFBZSxHQUFBYixNQUFBQyxFQUFBQyxNQUdKVyxFQUFBakIsV0FBQSxXQUNFLEdBQUEwQixJQUFBLENBS0EsT0FKQTdCLFFBQUFDLGVBQUF3QixRQUNFTixFQUFBTyxTQUFBQyxRQUFBQyxPQUFBLFVBQUE1QixPQUFBQyxlQUFBd0IsTUFDQUksR0FBQSxHQUVGQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnYXBwJywgW1xuICAnbmdSb3V0ZSdcbl0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJywgWyduZ1JvdXRlJywndG9hc3RyJ10pXG4uY29udHJvbGxlcignQXBwbGljYXRpb25DdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgJGxvY2F0aW9uLCAkd2luZG93LCBVc2VyU3ZjLCB0b2FzdHIpIHtcbiAgJHNjb3BlLiRvbignbG9naW4nLCBmdW5jdGlvbiAoXywgdXNlcikge1xuICAgICRzY29wZS5jdXJyZW50VXNlciA9IHVzZXJcbiAgICAkbG9jYXRpb24ucGF0aCgnLycpXG4gIH0pXG5cbiAgJHNjb3BlLmxvZ291dCA9IGZ1bmN0aW9uKCl7XG4gIFx0ZGVsZXRlKCRzY29wZS5jdXJyZW50VXNlcikgXG4gICAgJGxvY2F0aW9uLnBhdGgoJy8nKVxuICAgIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKCd0b2tlbicpXG4gIH1cblxuICBpZihVc2VyU3ZjLmlzTG9nZ2VkSW4oKSl7XG5cdCAgXHR2YXIgdXNlciA9IFVzZXJTdmMuZ2V0VXNlcigpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xuXHRcdCAgICAkc2NvcGUuY3VycmVudFVzZXIgPSByZXNwb25zZTtcblx0ICBcdH0pXG4gXHR9XG5cbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdEYXNoYm9hcmRDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgJGxvY2F0aW9uLCB0b2FzdHIpIHtcbiAgXG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignTG9naW5DdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2YywgdG9hc3RyKSB7XG4gICRzY29wZS5sb2dpbiA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgXHQkc2NvcGUuZXJyb3JNc2cgPSAnJztcbiAgICBVc2VyU3ZjLmxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZClcbiAgICAudGhlbihmdW5jdGlvbiAodXNlcikge1xuICAgICAgJHNjb3BlLiRlbWl0KCdsb2dpbicsIHVzZXIpXG4gICAgfSwgZnVuY3Rpb24oZXJyb3Ipe1xuICAgIFx0JHNjb3BlLmVycm9yTXNnID0gXCJJbmNvcnJlY3QgdXNlcm5hbWUvcGFzc3dvcmQuXCI7XG4gICAgfSlcbiAgfVxufSlcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ1JlZ2lzdGVyQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIFVzZXJTdmMpIHtcbiAgJHNjb3BlLnJlZ2lzdGVyID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgIFVzZXJTdmMucmVnaXN0ZXIodXNlcm5hbWUsIHBhc3N3b3JkKVxuICAgIC50aGVuKGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICAkc2NvcGUuJGVtaXQoJ2xvZ2luJywgdXNlcilcbiAgICB9KVxuICB9XG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29uZmlnKGZ1bmN0aW9uICgkcm91dGVQcm92aWRlcikge1xuXHQkcm91dGVQcm92aWRlclxuXHQud2hlbignLycsICAgICAgICAgeyBjb250cm9sbGVyOiAnRGFzaGJvYXJkQ3RybCcsIHRlbXBsYXRlVXJsOiAnL3RlbXBsYXRlcy9kYXNoYm9hcmQuaHRtbCcgfSlcblx0LndoZW4oJy9yZWdpc3RlcicsIHsgY29udHJvbGxlcjogJ1JlZ2lzdGVyQ3RybCcsIHRlbXBsYXRlVXJsOiAnL3RlbXBsYXRlcy9yZWdpc3Rlci5odG1sJyB9KVxuXHQud2hlbignL2xvZ2luJywgICAgeyBjb250cm9sbGVyOiAnTG9naW5DdHJsJywgdGVtcGxhdGVVcmw6ICcvdGVtcGxhdGVzL2xvZ2luLmh0bWwnIH0pXG59KVxuXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5zZXJ2aWNlKCdVc2VyU3ZjJywgZnVuY3Rpb24gKCRodHRwKSB7XG4gIHZhciBzdmMgPSB0aGlzXG4gIHN2Yy5nZXRVc2VyID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvdXNlcnMnKVxuICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGFcbiAgICB9KVxuICB9XG4gIHN2Yy5sb2dpbiA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9zZXNzaW9ucycsIHtcbiAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwgcGFzc3dvcmQ6IHBhc3N3b3JkXG4gICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS50b2tlbiA9IHJlc3BvbnNlLmRhdGFcbiAgICAgICRodHRwLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWyd4LWF1dGgnXSA9IHJlc3BvbnNlLmRhdGFcbiAgICAgIHJldHVybiBzdmMuZ2V0VXNlcigpXG4gICAgfSlcbiAgfVxuICBzdmMucmVnaXN0ZXIgPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvdXNlcnMnLCB7XG4gICAgICB1c2VybmFtZTogdXNlcm5hbWUsIHBhc3N3b3JkOiBwYXNzd29yZFxuICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHN2Yy5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpXG4gICAgfSlcbiAgfVxuICBzdmMuaXNMb2dnZWRJbiA9IGZ1bmN0aW9uICgpe1xuICAgIHZhciByZXN1bHQgPSBmYWxzZTtcbiAgICBpZih3aW5kb3cuc2Vzc2lvblN0b3JhZ2UudG9rZW4pe1xuICAgICAgJGh0dHAuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ3gtYXV0aCddID0gd2luZG93LnNlc3Npb25TdG9yYWdlLnRva2VuXG4gICAgICByZXN1bHQgPSB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59KVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9