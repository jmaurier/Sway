angular.module("app",["ngRoute"]),angular.module("app",["ngRoute","toastr"]).controller("ApplicationCtrl",["$scope","$location","$window","UserSvc","toastr",function(e,t,n,o,r){if(e.$on("login",function(n,o){e.currentUser=o,t.path("/")}),e.logout=function(){delete e.currentUser,t.path("/login"),window.sessionStorage.removeItem("token")},o.isLoggedIn()){o.getUser().then(function(t){e.currentUser=t})}else t.path("/login")}]),angular.module("app").controller("DashboardCtrl",["$scope","$location","UserSvc","TimesheetSvc","toastr",function(e,t,n,o,r){n.isLoggedIn()||t.path("/login"),e.createNewTimeSheet=function(n){o.create({title:n}).success(function(n){e.timesheets.unshift(n),t.path("/")})},o.fetch().success(function(t){e.timesheets=t})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","toastr",function(e,t,n){e.login=function(n,o){e.errorMsg="",t.login(n,o).then(function(t){e.$emit("login",t)},function(t){e.errorMsg="Incorrect H Number/Password."})}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(e,t){e.register=function(n,o,r){t.register(n,o,r).then(function(t){e.$emit("login",t)})}}]).directive("compareTo",function(){return{require:"ngModel",scope:{otherModelValue:"=compareTo"},link:function(e,t,n,o){o.$validators.compareTo=function(t){return t==e.otherModelValue},e.$watch("otherModelValue",function(){o.$validate()})}}}),angular.module("app").config(["$routeProvider",function(e){e.when("/",{controller:"DashboardCtrl",templateUrl:"/templates/dashboard.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"/templates/register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"/templates/login.html"}).when("/timesheet",{controller:"TimesheetCtrl",templateUrl:"/templates/timesheet.html"})}]),angular.module("app").service("TimesheetSvc",["$http",function(e){this.fetch=function(){return e.get("/api/timesheets")},this.create=function(t){return e.post("/api/timesheets",t)}}]),angular.module("app").service("UserSvc",["$http",function(e){var t=this;t.getUser=function(){return e.get("/api/users").then(function(e){return e.data})},t.login=function(n,o){return e.post("/api/sessions",{H_number:n,password:o}).then(function(n){return window.sessionStorage.token=n.data,e.defaults.headers.common["x-auth"]=n.data,t.getUser()})},t.register=function(n,o,r){return e.post("/api/users",{H_number:n,password:o,name:r}).then(function(){return t.login(n,o,r)})},t.isLoggedIn=function(){var t=!1;return window.sessionStorage.token&&(e.defaults.headers.common["x-auth"]=window.sessionStorage.token,t=!0),t}}]);
//# sourceMappingURL=data:application/json;base64,