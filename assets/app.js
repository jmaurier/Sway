angular.module("app",["ngRoute"]),angular.module("app",["ngRoute","toastr"]).controller("ApplicationCtrl",["$scope","$location","$window","UserSvc","toastr",function(e,t,o,n,r){if(e.$on("login",function(o,n){e.currentUser=n,t.path("/")}),e.logout=function(){delete e.currentUser,t.path("/"),window.sessionStorage.removeItem("token")},n.isLoggedIn()){n.getUser().then(function(t){e.currentUser=t})}else t.path("/login")}]),angular.module("app").controller("DashboardCtrl",["$scope","$location","UserSvc","toastr",function(e,t,o,n){o.isLoggedIn()||t.path("/login")}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","toastr",function(e,t,o){e.login=function(o,n){e.errorMsg="",t.login(o,n).then(function(t){e.$emit("login",t)},function(t){e.errorMsg="Incorrect H Number/Password."})}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(e,t){e.register=function(o,n,r){t.register(o,n,r).then(function(t){e.$emit("login",t)})}}]).directive("compareTo",function(){return{require:"ngModel",scope:{otherModelValue:"=compareTo"},link:function(e,t,o,n){n.$validators.compareTo=function(t){return t==e.otherModelValue},e.$watch("otherModelValue",function(){n.$validate()})}}}),angular.module("app").config(["$routeProvider",function(e){e.when("/",{controller:"DashboardCtrl",templateUrl:"/templates/dashboard.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"/templates/register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"/templates/login.html"})}]),angular.module("app").service("UserSvc",["$http",function(e){var t=this;t.getUser=function(){return e.get("/api/users").then(function(e){return e.data})},t.login=function(o,n){return e.post("/api/sessions",{H_number:o,password:n}).then(function(o){return window.sessionStorage.token=o.data,e.defaults.headers.common["x-auth"]=o.data,t.getUser()})},t.register=function(o,n,r){return e.post("/api/users",{H_number:o,password:n,name:r}).then(function(){return t.login(o,n,r)})},t.isLoggedIn=function(){var t=!1;return window.sessionStorage.token&&(e.defaults.headers.common["x-auth"]=window.sessionStorage.token,t=!0),t}}]);
//# sourceMappingURL=data:application/json;base64,